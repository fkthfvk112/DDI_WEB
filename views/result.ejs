<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" type="text/css" href="css/drug.css">
    <link rel="stylesheet" type="text/css" href="css/loadingSpinner.css">

</head>
<body>
    <%- include('./partials/navBar')%>
    <div class="whole_container">
        <%- include('./partials/spinner')%>
        <%- include('./partials/form')%>
        <%- include('./partials/resultSection')%>
    </div>
</body>
<script>
    const first_input = document.querySelector('.first_input');
    const second_input = document.querySelector('.second_input');
    const recommand_section1 = document.querySelector('.recommand_section1');
    const recommand_section2 = document.querySelector('.recommand_section2');
    const clearBtn = document.querySelector('.clearBtn');
    const loadSampleBtn = document.querySelector('.loadSampleBtn');
    const checkBtn = document.querySelector('.checkBtn');
    const interaction_from = document.querySelector('.interaction_from');
    const loading_spinner = document.querySelector('.loading-spinner');
    let drugs = '<%= drugList %>';
    const drugArr = drugs.split(',');

    window.addEventListener('pageshow', function(event) {
        var historyTraversal = event.persisted || 
                                (typeof window.performance != 'undefined' && 
                                    window.performance.navigation.type === 2);
        if (historyTraversal) {
            loading_spinner.style.display = 'none';
        }
    });
    function getDrugNameList(inputString){
        let result = [];
        for(drug of drugArr){
            if(drug.includes(inputString)){
                result.push(drug);
            }
        }
        return result;
    }

    function setRecommandDrug(drug, parent, input){
        const newSpan = document.createElement('span');
        newSpan.innerHTML = `${drug}`;
        newSpan.setAttribute('class', 'recommanded_drug')
        parent.appendChild(newSpan);
        newSpan.addEventListener('click', ()=>{
            input.value = newSpan.innerHTML;
        })
    }

    first_input.addEventListener('keyup', ()=>{
        while(recommand_section1.firstChild){
            recommand_section1.removeChild(recommand_section1.firstChild);
        }
        if (first_input.value.length >= 3) {
            let inputDrugName = first_input.value;
            inputDrugName = inputDrugName.charAt(0).toUpperCase() + inputDrugName.slice(1);

            const drugsNames = getDrugNameList(inputDrugName);
            if(!drugsNames.length){
                const newSpan = document.createElement('span');
                newSpan.innerHTML = "No drug that starts with that string"
                recommand_section1.appendChild(newSpan);
            }
            else{
                let drugCnt = 1;
                for(drug of drugsNames){
                    setRecommandDrug(drug, recommand_section1, first_input);
                    if(drugCnt > 3){
                        const newDiv = document.createElement('div');
                        recommand_section1.appendChild(newDiv);
                        drugCnt = drugCnt%4;
                    }
                    drugCnt++;
                }
            }
        }
      });

    second_input.addEventListener('keyup', ()=>{
        while(recommand_section2.firstChild){
            recommand_section2.removeChild(recommand_section2.firstChild);
        }
        if (second_input.value.length >= 3) {
            let inputDrugName = second_input.value;
            inputDrugName = inputDrugName.charAt(0).toUpperCase() + inputDrugName.slice(1);

            const drugsNames = getDrugNameList(inputDrugName);
            if(!drugsNames.length){
                const newSpan = document.createElement('span');
                newSpan.innerHTML = "No drug that starts with that string"
                recommand_section2.appendChild(newSpan);
            }
            else{
                let drugCnt = 1;
                for(drug of drugsNames){
                    setRecommandDrug(drug, recommand_section2, second_input);
                    if(drugCnt > 3){
                        const newDiv = document.createElement('div');
                        recommand_section2.appendChild(newDiv);
                        drugCnt = drugCnt%4;
                    }
                    drugCnt++;
                }
            }
        }
    });
    
    clearBtn.addEventListener('click', ()=>{
        while(recommand_section1.firstChild){
            recommand_section1.removeChild(recommand_section1.firstChild);
        }
        while(recommand_section2.firstChild){
            recommand_section2.removeChild(recommand_section2.firstChild);
        }
        first_input.value = "";
        second_input.value ="";
    })
    loadSampleBtn.addEventListener('click', ()=>{
        while(recommand_section1.firstChild){
            recommand_section1.removeChild(recommand_section1.firstChild);
        }
        while(recommand_section2.firstChild){
            recommand_section2.removeChild(recommand_section2.firstChild);
        }
        first_input.value = "Abemaciclib";
        second_input.value ="Amiodarone";
    })

    function handleSubmit(){
        console.log(first_input.value);
        console.log(drugArr.includes(first_input.value));
        if(drugArr.includes(first_input.value) && drugArr.includes(second_input.value)){
            interaction_from.submit();
            loading_spinner.style.display = 'inline-block';
        }
        else{
            alert('Invalid drug name(s)')
        }
    }
</script>
</html>